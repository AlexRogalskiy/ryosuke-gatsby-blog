webpackJsonp([0x905615afe7f8],{522:function(n,s){n.exports={data:{blog:{html:'<p>Just copy this into a <code class="language-text">docker-compose.yml</code> in your project root, and then run <code class="language-text">docker-compose up -d</code> üöÄ </p>\n<div class="gatsby-highlight">\n      <pre class="language-yml"><code class="language-yml">version: &quot;2&quot;\nservices:\n  my-wpdb:\n    image: mariadb\n    ports:\n      - &quot;8081:3306&quot;\n    environment:\n      MYSQL_ROOT_PASSWORD: root\n  my-wp:\n    image: wordpress\n    volumes:\n      - ./:/var/www/html\n    ports:\n      - &quot;8080:80&quot;\n    links:\n      - my-wpdb:mysql\n    environment:\n      WORDPRESS_DB_PASSWORD: root</code></pre>\n      </div>\n<p>Hope that helps,\nRyo</p>\n<hr>\n<p><strong>References</strong></p>\n<ul>\n<li><a href="https://twitter.com/whoisryosuke/status/1006325273900380160">Original tweet</a></li>\n<li><a href="https://gist.github.com/whoisryosuke/77da2fbe1c5ce782a0908cb1e8d17fe7">See the code gist</a></li>\n</ul>',frontmatter:{title:"shortcode - üêã Docker for Wordpress made easy",cover_image:{publicURL:"/static/shortcode-code-snippets-88148405a821950263064ed5b62734ac.jpg",childImageSharp:{sizes:{tracedSVG:"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='267' viewBox='0 0 400 267' version='1'%3E%3Cpath d='M0 134v133h10c11 0 14-1 14-6l1-1c1 0 3-5 3-9 0-2 0-3 2-3s2-1 2-4v-4h4l4-1h8l5-3 6-4c2 0 2-1 2-4v-4h6c4 0 5 0 5-2s1-2 4-2c4 0 7 2 7 3 0 3 4 5 8 5h5v-12h8v-8h16v-8h4c4 0 4 0 4-2 0-3 0-3 4-3l4-1c0-2 1-2 4-2l4-1c0-2 2-2 8-2 8 0 8 0 8-2 0-3 0-3 4-3 3 0 4 0 4 2l1 2 3-2 3-2 1-3c0-3 2-4 4-2l2 1c2 0 4-3 3-4l3-6 2 3 2 4v-9h8v4l1 4 1-4c0-3 0-4 2-4l1-4c0-3 0-4 2-4l1-1 4-1 8-2c3-2 4-2 4-1 0 2 1 2 4 2l4-1c0-2 1-2 4-2l4-1h2c2 2 2 2 3 0 2-1 2-2-1-3l-8-2-4-1h4l9-1 7-2c4 0 4 0 4-3s0-3 4-3 4 0 4-2c0-3 0-3 4-3l4-1 4-1h4v-4c0-5 0-5 3-4l4-1c2-2 3-4 1-3s-7-1-5-2c1-1 1-1-1-1-2 1-5-4-4-9l1-5c1-3 12-1 12 3h2l1-2 4-4-1 2v1l2-2h4c2-3 1-3-3-3l-4 1-1 1-1-1c0-3 10-3 12 0 1 1 1 1 2-1 1-1 1-1 1 1-1 2 0 3 2 3l2 3 2-1 4-3 4-2v3l2 4c0 2 0 2-1 1l-1-1 1 3v3l1 3 1-5c0-8 1-9 5-9h1c-3 0-2-3 1-2 2 0 2 0 1-1s-1-1 2-1 3 0 2 1l-2 1-1 1 2 1v1l1 2 1 1c0-3 2-2 2 1s0 3 1 1l1-4c1 0 1-1-1-1-1-1-1-1 1-1 3 0 3-2 0-3h-2l2-1 3 1h1l3 2h2l-1-2 3-3c1 1 2 2 2 5v5l1-4c0-4 0-4 1-2v4l1 1 1-2 2-3c1-1 1-1-1-1-2 1-2 0-2-1 0-2 0-2 1-1l4 1 4 1h-2l-1 1 3 1h1c0 2 4 1 5-1l1-2 1-1c0-2 1-2 4-2 4 0 4 0 4-2l1-3 1-4-1-4-1-1c0-2 1-2 4-2s4 0 4 2l4 1h4v93c0 81 1 75 1-40V0H0v134m263-36l-1 3v10c-1 1-1 1-2-2l-2-2h-3c-3-2-3-4-1-4v1l1 1h1v1l1-2v-1c3 1 3-1 1-2-3-1-10 2-10 5 0 2 0 2 1 1l1-1c1 1 2 3 4 3l3 3c-1 3-3 4-6 1l-3-2 1 2v3a1139 1139 0 0 1 9 0c2-1 2-1 2 1s2 0 2-3c1-2 1-2 1 0 0 5 2 3 3-3 0-6 1-8 4-8 2 1 2 1 2 5v8c2 5 4 5 3-1 0-3 0-3 1 0l1 1v-3l-1-5c1-5-2-7-7-7-3 1-4 1-3-1v-5c-1-1-2 0-3 3' fill='lightgray' fill-rule='evenodd'/%3E%3C/svg%3E",src:"/static/shortcode-code-snippets-88148405a821950263064ed5b62734ac-4e8db.jpg",srcSet:"/static/shortcode-code-snippets-88148405a821950263064ed5b62734ac-7cc04.jpg 310w,\n/static/shortcode-code-snippets-88148405a821950263064ed5b62734ac-69042.jpg 620w,\n/static/shortcode-code-snippets-88148405a821950263064ed5b62734ac-4e8db.jpg 1240w,\n/static/shortcode-code-snippets-88148405a821950263064ed5b62734ac-50ab1.jpg 1860w,\n/static/shortcode-code-snippets-88148405a821950263064ed5b62734ac-e738f.jpg 1920w"}}},date:"11 June, 2018",tags:["laravel","php","api","shortcode","code snippet","tips"],section:"blog"},fields:{slug:"/blog/2018/shortcode-docker-for-wordpress-made-easy/"}},relatedPosts:{edges:[{node:{html:'<p>When I discovered Airbnb\'s react-sketchapp, I was ecstatic to start ditching the clunky design version control systems for a single source of truth: <strong>React</strong>. </p>\n<p>Everything ends up in React anyway. And despite my love for <a href="https://sketchapp.com">Sketch</a> -- it\'s not available on Windows or Linux, limiting contribution. We wanted to make our design system as accessible as possible, and as exclusive as React sounded, it was ultimately the better choice.</p>\n<h2>Single source of truth: React</h2>\n<h3>Normal development process:</h3>\n<ul>\n<li>Design in sketch</li>\n<li>Transfer designs to React</li>\n<li>Design again in sketch</li>\n<li>Translate changes to React</li>\n<li>Commit sketch file to git repo</li>\n<li>Git pull new changes and lose small changes another artist made in another commit</li>\n<li>Or ideally version control with <a href="http://plantapp.io/">Plant</a> or <a href="http://kactus.io">Kactus</a> and still struggle.</li>\n</ul>\n<h3>The better way:</h3>\n<ul>\n<li>Design in sketch (or Photoshop, or any program really)</li>\n<li>Transfer designs to React</li>\n<li>Never touch Sketch again, unless you need to, you know...sketch</li>\n<li>Transfer React designs to Sketch</li>\n<li>Update React code, generate new Sketch file</li>\n</ul>\n<h2>The problems</h2>\n<h3>React as a requirement</h3>\n<p>This is a issue for some, particularly companies that prefer to stay platform agnostic. If this is the case, then definitely base your design system in whatever format you prefer.</p>\n<p>For Kushy, all of our applications are being developed in React. Every single one of them. Maybe one or two in Preact, some in Electron (which uses React). Obviously non-app projects, like static websites, are built on basic HTML/CSS. But for the most part, 90% of the time you\'re using React in our ecosystem. This makes it an obvious choice for the source of truth.</p>\n<h3>Updating designs via Sketch</h3>\n<p>This system makes it easy for developers to contribute to the design system, but is it a 2-way street? Does it allow for designers to update Sketch and reflect in React? <strong>Spoiler alert:</strong> <em>Nope, only React to Sketch.</em></p>\n<p>Which means you need design version control using Kactus, Plant, etc. The design system would have a script that builds Sketch files from React components. Designers <code class="language-text">git pull</code> those Sketch files and use Kactus to handle changes between designers + submitting PR to repo. A developer has to look at the Sketch file (ideally using Kactus to compare visual commit diffs), and then apply changes to React.</p>\n<h3>It\'s not a React Converter</h3>\n<p>One of the major issues is that you\'re required to use only 3 types of <em>universal</em> components (View, Text, StyleSheet) to create all your components. It\'s a system of <em>primitives</em>, similar to React Native, where you have base components that extend the client\'s OS or browsing software.</p>\n<p>These primitives allow you to easily create compositions that convert to Sketch styles and shapes, rather than having to interpret DOM nodes + CSS. </p>\n<p>However, if you have an existing design system in React, like Bootstrap or Material UI, <strong>you\'ll have to recode everything by hand</strong> in a new API. And you\'ll <em>still</em> have to manually update your old React components, unless you choose to switch over to universal rendering with <a href="https://github.com/lelandrichardson/react-primitives">react-primitives</a>.</p>\n<h2>The solutions</h2>\n<h3>Everyone doesn\'t use Sketch, everyone can use React</h3>\n<p>Sketch is an application that is exclusive to the Mac, so Windows and Linux users will be unable to contribute to the design system if it\'s basis begins at Sketch. </p>\n<p>By making the single source of truth React components, it allows anyone to make contributions on any platform. And by using the Airbnb library, we can create a bridge between React and Sketch, so we can still facilitate access to the creatives using Sketch.</p>\n<h3>More accessible components</h3>\n<p>Even if someone doesn\'t prefer React, we can still easily extract the HTML and CSS from rendered components. It\'s not exactly copy paste, but it\'s an easier translation than say converting a Sketch file to HTML/CSS (since those services exist, but <a href="https://launchpad.animaapp.com/pricing">tend to be pricey</a>).</p>\n<p>And by forcing you to work in <em>primitives</em>, your components become <em>universally available</em> in most devices (mobile - Android + iOS, desktop, etc).</p>\n<h2>The Process</h2>\n<ul>\n<li>Make list of needs for style guide (typography, colors, etc)</li>\n<li>Make a template in Sketch of how the final product will look</li>\n<li>Make Sketch of interface for app</li>\n<li>Make the app!</li>\n</ul>\n<h2>Using react-sketchapp</h2>\n<p>We\'ll be using <a href="https://github.com/airbnb/react-sketchapp/tree/master/examples/styleguide">the Styleguide example</a> in the React-Sketch.app repo. </p>\n<h3>New projects</h3>\n<p>If you\'re starting a new project: </p>\n<ol>\n<li><code class="language-text">git clone</code> the base project</li>\n<li><code class="language-text">cd</code> into the styleguide folder</li>\n<li><code class="language-text">npm install</code></li>\n<li><code class="language-text">npm run render</code></li>\n<li>Open Sketch, create a new document.</li>\n<li>Click on Plugins in the top menu, navigate to <code class="language-text">react-sketchapp: Styleguide</code></li>\n</ol>\n<h3>Existing projects</h3>\n<p>In an existing project, install the necessary dependencies:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> i react react-sketchapp react-test-renderer chroma-js\n<span class="token function">npm</span> i @skpm/builder --dev\n</code></pre>\n      </div>\n<p>Add the following scripts to your <code class="language-text">package.json</code>:</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code class="language-json">  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"skpm-build"</span><span class="token punctuation">,</span>\n    <span class="token property">"watch"</span><span class="token operator">:</span> <span class="token string">"skpm-build --watch"</span><span class="token punctuation">,</span>\n    <span class="token property">"render"</span><span class="token operator">:</span> <span class="token string">"skpm-build --watch --run"</span><span class="token punctuation">,</span>\n    <span class="token property">"render:once"</span><span class="token operator">:</span> <span class="token string">"skpm-build --run"</span><span class="token punctuation">,</span>\n    <span class="token property">"postinstall"</span><span class="token operator">:</span> <span class="token string">"npm run build &amp;&amp; skpm-link"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre>\n      </div>\n<h2>The Results</h2>\n<img src="./" alt="Airbnb\'s react-sketchapp styleguide example"/>\n<p>Here\'s what you get out of the box. You get a basic style guide with typography and color definitions. </p>\n<h3>Hot reloading</h3>\n<p>Editing and saving the React components triggers Sketch to remove the old layer group, and replace with a new group. If you move anything around, you\'ll see it bounce back to the original position on the canvas. That also means even if you place anything inside an artboard, it\'ll get deleted and replaced with only what is defined in React.</p>\n<h3>Works with custom fonts</h3>\n<p>It instantly changed the text from Helvetica and Georgia to a custom font I\'ve installed from a 3rd party. </p>\n<h3>SVGs</h3>\n<p>Using SVGs was fairly simple. I grabbed SVG code, imported it into the project, and replaced all the SVG\'s DOM elements with React component equivalents (<code class="language-text">&lt;path&gt; becomes &lt;Svg.path&gt;</code>). It was a simple process of find and replace, and I had functional (and universal) SVG components.</p>\n<h3>Artboards, Pages, Organization</h3>\n<p>You can create artboards and pages with React using the <code class="language-text">&lt;Artboard&gt;</code> and <code class="language-text">&lt;Page&gt;</code> components. It\'s as easy as wrapping everything in these . It also supports <code class="language-text">/</code> based name notation, which is vital for Sketch to export into organized folders.</p>\n<p>I couldn\'t get multiple pages to work with the Styleguide example, and the documentation didn\'t help much. I kept getting an error saying something about <code class="language-text">document.pages</code> after I wrapped everything in <code class="language-text">&lt;Document&gt;</code> components (had to rename the other Document component that gets rendered).</p>\n<h4>Generating artboards for each <Component /></h4>\n<p>I was looking for examples of devs using react-sketchapp in the wild, and stumbled on this bit of code in the <a href="https://github.com/ant-design/antd-sketchapp/blob/master/src/demo.js">antd-sketchapp</a> repo:</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> Artboard <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-sketchapp\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> ButtonDemo <span class="token keyword">from</span> <span class="token string">\'./components/Button/demo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> CheckboxDemo <span class="token keyword">from</span> <span class="token string">\'./components/Checkbox/demo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> PaginationDemo <span class="token keyword">from</span> <span class="token string">\'./components/Pagination/demo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> TableDemo <span class="token keyword">from</span> <span class="token string">\'./components/Table/demo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> GridDemo <span class="token keyword">from</span> <span class="token string">\'./components/Grid/demo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> IconDemo <span class="token keyword">from</span> <span class="token string">\'./components/Icon/demo\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">renderDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> Component<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Artboard\n        name<span class="token operator">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`antd-sketchapp </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span>\n        style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          padding<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">></span>\n        <span class="token operator">&lt;</span>Component <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Artboard<span class="token operator">></span><span class="token punctuation">,</span>\n      context<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">currentPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> Checkbox <span class="token operator">=</span> <span class="token function">renderDemo</span><span class="token punctuation">(</span><span class="token string">\'Checkbox\'</span><span class="token punctuation">,</span> CheckboxDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> Button <span class="token operator">=</span> <span class="token function">renderDemo</span><span class="token punctuation">(</span><span class="token string">\'Button\'</span><span class="token punctuation">,</span> ButtonDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> Pagination <span class="token operator">=</span> <span class="token function">renderDemo</span><span class="token punctuation">(</span><span class="token string">\'Pagination\'</span><span class="token punctuation">,</span> PaginationDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> Table <span class="token operator">=</span> <span class="token function">renderDemo</span><span class="token punctuation">(</span><span class="token string">\'Table\'</span><span class="token punctuation">,</span> TableDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> Grid <span class="token operator">=</span> <span class="token function">renderDemo</span><span class="token punctuation">(</span><span class="token string">\'Grid\'</span><span class="token punctuation">,</span> GridDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> Icon <span class="token operator">=</span> <span class="token function">renderDemo</span><span class="token punctuation">(</span><span class="token string">\'Icon\'</span><span class="token punctuation">,</span> IconDemo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>You create a simple functional component called <code class="language-text">renderDemo</code> that accepts the name of the component, and the actual component itself. It returns an Artboard with the dynamic <Component /> nested inside. Then we run that <code class="language-text">renderDemo</code> function on each component. Wha-la üëâ we have 6 separate artboards for our individual components.</p>\n<h2>Conclusion</h2>\n<img src="./" alt="Airbnb\'s react-sketchapp styleguide example with Kushy edits"/>\n<p><strong>If you\'re starting from scratch,</strong> this seems like an interesting experiment to create a truly universal set of React components that work on web and mobile.</p>\n<p><strong>If you have an existing design system</strong>, I say pass on this. It\'s not worth the effort in developing and maintaining a mirrored set of primitive components. Unless you plan on switching to primitives, or already use some sort of universal component setup -- then this might be a promising path for you. </p>\n<p>It was a little disappointing to find that this wasn\'t as robust as I wanted it to be. The process was inhibited by the limitations of primitives. I need a world where I can grab my React components defined fundamentally in HTML/CSS and convert them to Sketch.</p>\n<p>I\'m looking forward to trying out brainly\'s <a href="https://github.com/brainly/html-sketchapp">html-sketchapp</a>, which does exactly that -- converts HTML + CSS to a Sketch file. Rather than using React native-like primitives, we simply render our React components to HTML and pull them into the converter. But I\'ll get into that next time!</p>\n<p><strong><a href="https://github.com/whoisryosuke/kushy-react-sketchapp">‚ö°Ô∏è  Download my source code here on Github üëà </a></strong></p>\n<p>Hope this helps üëç\nRyo</p>\n<hr>\n<p><strong>References</strong>:</p>\n<ul>\n<li><a href="https://github.com/whoisryosuke/kushy-react-sketchapp">My sample project on Github</a></li>\n<li><a href="https://github.com/airbnb/react-sketchapp/">airbnb\'s react-sketchapp</a></li>\n</ul>',frontmatter:{title:"Using Airbnb's React to Sketch app to generate Sketch style guide",cover_image:{publicURL:"/static/Style-Guide-with-React-Sketch-App-1920px-f3102dbf269c877d3f71c225855e9927.jpg",childImageSharp:{sizes:{src:"/static/Style-Guide-with-React-Sketch-App-1920px-f3102dbf269c877d3f71c225855e9927-4e8db.jpg",srcSet:"/static/Style-Guide-with-React-Sketch-App-1920px-f3102dbf269c877d3f71c225855e9927-7cc04.jpg 310w,\n/static/Style-Guide-with-React-Sketch-App-1920px-f3102dbf269c877d3f71c225855e9927-69042.jpg 620w,\n/static/Style-Guide-with-React-Sketch-App-1920px-f3102dbf269c877d3f71c225855e9927-4e8db.jpg 1240w,\n/static/Style-Guide-with-React-Sketch-App-1920px-f3102dbf269c877d3f71c225855e9927-50ab1.jpg 1860w,\n/static/Style-Guide-with-React-Sketch-App-1920px-f3102dbf269c877d3f71c225855e9927-e738f.jpg 1920w"}}},date:"02 August, 2018",tags:["react","javascript","airbnb","design system","style guide","tips","tutorial"]},fields:{slug:"/blog/2018/using-airbnb-react-sketch-app-for-style-guide/"}}},{node:{html:'<p>I had to do some development on another computer recently, and after settling down in front of a desk with the default VSCode config, I quickly realized how much of my local environment and workflow needed to be configured and installed. </p>\n<h2>Backing up your VSCode setup ‚¨áÔ∏è</h2>\n<p>Luckily, VSCode makes it a fairly easy process to backup your settings and extensions. Your configuration is a JSON file, making it a effortless copy and paste scenario. And as for the extensions, you just install a bash script to back everything up. This generates a list of Bash commands that install each individual extension:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">code --list-extensions <span class="token operator">|</span> <span class="token function">xargs</span> -L 1 <span class="token keyword">echo</span> code --install-extension\n</code></pre>\n      </div>\n<blockquote>\n<p>To install the code Bash alias on Mac, go to Command Palette and type "install command" to find the shell script. Make sure to install it on both your backup, and new computer.</p>\n</blockquote>\n<h2>My setup üé®</h2>\n<h3>JSON Configuration üîß</h3>\n<p>Not too much special here. Only a couple customizations of hotkeys (I used to use Sublime, so I prefer those shortcuts). I modified the Palenight Italic theme because I didn\'t like the contrast of some sections (like the sidebar color).</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n    <span class="token property">"workbench.colorTheme"</span><span class="token operator">:</span> <span class="token string">"Palenight Italic"</span><span class="token punctuation">,</span>\n    <span class="token property">"editor.fontFamily"</span><span class="token operator">:</span> <span class="token string">"Fira Code"</span><span class="token punctuation">,</span>\n    <span class="token property">"editor.fontSize"</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n    <span class="token property">"workbench.iconTheme"</span><span class="token operator">:</span> <span class="token string">"material-icon-theme"</span><span class="token punctuation">,</span>\n    <span class="token property">"sublimeTextKeymap.promptV3Features"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">"editor.multiCursorModifier"</span><span class="token operator">:</span> <span class="token string">"ctrlCmd"</span><span class="token punctuation">,</span>\n    <span class="token property">"editor.snippetSuggestions"</span><span class="token operator">:</span> <span class="token string">"top"</span><span class="token punctuation">,</span>\n    <span class="token property">"editor.formatOnPaste"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">"window.zoomLevel"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token property">"workbench.colorCustomizations"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">"[Palenight Italic]"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">"sideBar.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"sideBarSectionHeader.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"tab.activeBackground"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"editor.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"editorHoverWidget.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"debugExceptionWidget.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"peekViewTitle.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"panel.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"statusBar.noFolderBackground"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"notifications.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"debugToolBar.background"</span><span class="token operator">:</span> <span class="token string">"#222635"</span><span class="token punctuation">,</span>\n            <span class="token property">"tab.inactiveBackground"</span><span class="token operator">:</span> <span class="token string">"#2d3244"</span><span class="token punctuation">,</span>\n            <span class="token property">"tab.inactiveForeground"</span><span class="token operator">:</span> <span class="token string">"#929ac9"</span><span class="token punctuation">,</span>\n            <span class="token property">"sideBar.foreground"</span><span class="token operator">:</span> <span class="token string">"#7179a1"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">"javascript.updateImportsOnFileMove.enabled"</span><span class="token operator">:</span> <span class="token string">"never"</span><span class="token punctuation">,</span>\n    <span class="token property">"files.associations"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">"*.js"</span><span class="token operator">:</span> <span class="token string">"javascriptreact"</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h3>Extensions ‚öôÔ∏è</h3>\n<p>Just a few of the must-haves. </p>\n<ul>\n<li><strong>Project Manager</strong> is great for keeping track of projects across your computer/drives. </li>\n<li><strong>ES7 / ReactJS</strong> snippets are a must.Start typing <code class="language-text">r</code>...to get premade React component structures (like functional or Redux containers)</li>\n<li><strong>PHP Intellisense</strong> - This is a must for PHP developers working with complex application. Hover over any method/function to see it\'s documentation, and click the tooltip to navigate directly to the function\'s source file.</li>\n<li><strong>PHP Docblocker</strong> - Makes documenting PHP code easy. Type <code class="language-text">/**</code> to generate a docblock based on your function. It\'ll automatically pick up things like the return value and toss it in your docs (complete with type checking).</li>\n<li><strong>Todo Tree</strong> - If you ever find yourself leaving <code class="language-text">// @todo</code> comments in your code, this extension will scan your code and find all them to place in a todo list.</li>\n<li><strong>Polacode</strong> - Great way to quickly take screenshots of your code, all styled with your editors theme.</li>\n<li><strong>Multi-line find and replace</strong> - Ever need to copy more than one line of code without adding regex manually? Select text, open up the command palette, and choose this plugin to copy a valid regex search. This is essential for VSCode since it doesn\'t support this by default.</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js">code <span class="token operator">--</span>install<span class="token operator">-</span>extension alefragnani<span class="token punctuation">.</span>project<span class="token operator">-</span>manager\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension axlan<span class="token punctuation">.</span>multiline<span class="token operator">-</span>find<span class="token operator">-</span>and<span class="token operator">-</span>replace\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension cjhowe7<span class="token punctuation">.</span>laravel<span class="token operator">-</span>blade\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension dbaeumer<span class="token punctuation">.</span>vscode<span class="token operator">-</span>eslint\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension dsznajder<span class="token punctuation">.</span>es7<span class="token operator">-</span>react<span class="token operator">-</span>js<span class="token operator">-</span>snippets\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension felixfbecker<span class="token punctuation">.</span>php<span class="token operator">-</span>intellisense\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension Gruntfuggly<span class="token punctuation">.</span>todo<span class="token operator">-</span>tree\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension HookyQR<span class="token punctuation">.</span>beautify\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension joelday<span class="token punctuation">.</span>docthis\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension juanmnl<span class="token punctuation">.</span>vscode<span class="token operator">-</span>theme<span class="token operator">-</span>hydra\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension kumar<span class="token operator">-</span>harsh<span class="token punctuation">.</span>graphql<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">-</span>vscode\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension leighlondon<span class="token punctuation">.</span>eml\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension mikestead<span class="token punctuation">.</span>dotenv\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension ms<span class="token operator">-</span>vscode<span class="token punctuation">.</span>sublime<span class="token operator">-</span>keybindings\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension neilbrayfield<span class="token punctuation">.</span>php<span class="token operator">-</span>docblocker\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension neilding<span class="token punctuation">.</span>language<span class="token operator">-</span>liquid\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension octref<span class="token punctuation">.</span>vetur\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension PKief<span class="token punctuation">.</span>material<span class="token operator">-</span>icon<span class="token operator">-</span>theme\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension pnp<span class="token punctuation">.</span>polacode\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension sdras<span class="token punctuation">.</span>night<span class="token operator">-</span>owl\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension whizkydee<span class="token punctuation">.</span>material<span class="token operator">-</span>palenight<span class="token operator">-</span>theme\ncode <span class="token operator">--</span>install<span class="token operator">-</span>extension zhuangtongfa<span class="token punctuation">.</span>Material<span class="token operator">-</span>theme\n</code></pre>\n      </div>\n<h2>What\'s your setup like? üíª</h2>\n<p>I\'m always interested in learning from other\'s workflows and maybe some lesser known extensions that are must-haves. Let me know what your VSCode setup looks like in the comments! üëç</p>\n<p>Cheers üçª\nRyo</p>',
frontmatter:{title:"My Visual Studio Code Setup üé®",cover_image:{publicURL:"/static/vs-code-setup-1920px-de765469176d2c3a2768535156194ca5.jpg",childImageSharp:{sizes:{src:"/static/vs-code-setup-1920px-de765469176d2c3a2768535156194ca5-4e8db.jpg",srcSet:"/static/vs-code-setup-1920px-de765469176d2c3a2768535156194ca5-7cc04.jpg 310w,\n/static/vs-code-setup-1920px-de765469176d2c3a2768535156194ca5-69042.jpg 620w,\n/static/vs-code-setup-1920px-de765469176d2c3a2768535156194ca5-4e8db.jpg 1240w,\n/static/vs-code-setup-1920px-de765469176d2c3a2768535156194ca5-50ab1.jpg 1860w,\n/static/vs-code-setup-1920px-de765469176d2c3a2768535156194ca5-e738f.jpg 1920w"}}},date:"27 July, 2018",tags:["vscode","tips","resource"]},fields:{slug:"/blog/2018/my-visual-studio-code-setup/"}}}]}},pathContext:{tag:"tips",slug:"/blog/2018/shortcode-docker-for-wordpress-made-easy/"}}}});
//# sourceMappingURL=path---blog-2018-shortcode-docker-for-wordpress-made-easy-8155ee43197b05ed4102.js.map